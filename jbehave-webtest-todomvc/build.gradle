import com.sun.org.apache.xalan.internal.xsltc.compiler.Copy

repositories {
    mavenLocal()
    jcenter()
}

ext{
    serenity_version = "2.0.30"
    serenity_jbehave_version = "1.44.0"
    serenity_cucumber_version = "1.9.22"
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.30")
    }
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "net.serenity-bdd.aggregator"


println "project.serenity.outputDirectory= ${project.serenity.outputDirectory}"

dependencies {
    compile localGroovy()
    compile "net.serenity-bdd:serenity-core:$serenity_version"
    compile "net.serenity-bdd:serenity-junit:$serenity_version"
    compile("net.serenity-bdd:serenity-screenplay:$serenity_version")
    compile("net.serenity-bdd:browse-the-web:$serenity_version")
    compile("net.serenity-bdd:serenity-cucumber:$serenity_cucumber_version")
    compile("net.serenity-bdd:serenity-jbehave:$serenity_jbehave_version")


    compile 'org.slf4j:slf4j-simple:1.7.12'
    compile 'org.codehaus.groovy:groovy-all:2.3.10'
    compile 'junit:junit:4.12'
    compile 'org.assertj:assertj-core:3.1.0'
    compile 'org.hamcrest:hamcrest-all:1.3'

}


test {
    testLogging {
       // showStandardStreams = true
    }
    /* Pass all system properties: */
    systemProperties System.getProperties()

    maxParallelForks = Runtime.runtime.availableProcessors()
}

task copyDeps(type: Copy) {
    from configurations.runtime
    into project.projectDir.path+"/lib"
}


gradle.startParameter.continueOnFailure = true
